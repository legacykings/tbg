#include<Windows.h>
#include<iostream>
#pragma comment(lib, "winmm.lib")
using namespace std;

// global variables and function declaration
void BattleSystem();
int MonsterGen();
int PlayerHealth = 100;
string inventory[10];
int dabloons = 100;
void itemDropper();
void Shop();
void PetActions();

int main() { // main game loop
	for (int i = 0; i < 10; i++) // invetory slots
		inventory[i] = " ";
// introduction
	cout << "you wake up in the deep depths of what seems to be a school building?" << endl;
	cout << "you wake up with you dog jamal who licks you face." << endl;
	cout << "covered in cobwebs and dust you dust yourself off and take a look around." << endl;
	cout << "this place that seems to be a cellar? it is to dark for you to really see." << endl;
	cout << "you can't really make out anything it is way to dark all you can see is a faint glow of what seems to be a doorway?" << endl;
	cout << "try to make your way through this school in hopes of finding a exit and any signs of life form" << endl;

	srand(time(NULL));

	char direction = 'a';
	int room = 1;
	int affinity = 0;

	while (direction != 'q' && PlayerHealth >= 0) {
// inventory pops up in every room
		cout << "your inventory" << endl;
		for (int i = 0; i < 10; i++)
			cout << inventory[i] << " ";
		cout << endl;

		switch (room) {
		case 1:
			system("color 73");
			cout << "you walk through the illuminated doorway it closes behind you." << endl;
			cout << "you seem to be in a old storage room in the basement? The only other way is (e)ast " << endl;
			cout << "your pet jamal would like to be (p)et." << endl;
			if (inventory[0] != "key")
				cout << " you see a shiny (k)ey on the ground." << endl;
			cin >> direction;
			if (direction == 'e')
				room = 2;
			if (direction == 'k') {
				cout << "you got a shiny key!" << endl;
				inventory[0] = "key";
			}
			if (direction == 'p') {
				cout << "you pet jamal hes happy:)" << endl;
				affinity += 10;
				cout << "jamals affinity is now " << affinity << endl;
			}
			break;
		case 2:
			system("color CF");
			cout << "walking into the next room you see knocked over lockers and tables who went on a rampage?" << endl;
			cout << "you cant really make out anything bc there is moss everywhere but its not green like regular moss its like a crimson red weird?" << endl;
			cout << "There is a door to the (w)est of you. To the (n)orth you can make out a door overgrown with this weird moss to the (s)outh you can see another door." << endl;
			cout << "jamal sits patiently waiting for a (p)at on the head." << endl;
			cin >> direction;
			if (direction == 'w')
				room = 1;
			if (direction == 'n')
				if (inventory[0] == "key") {
					room = 3;
					cout << "you unlock the door with the key!" << endl;
					inventory[0] = " ";
				}
				else
					cout << "the door is locked!" << endl;

			if (direction == 's')
				room = 4;
			if (direction == 'p') {
				cout << "you pet jamal hes happy:)" << endl;
				affinity += 10;
				cout << "jamals affinity is now " << affinity << endl;
			}
			PetActions();
			break;
		case 3:
		 BattleSystem();
		 cout << "you go throught the door behind the moss and end up in a dimly lit room you cant make out what seems to be many file cabinets what do they have in them?" << endl;
			cout << "dead end you have to go back.go(s)outh." << endl;
			cout << "out of the corner of your eye you see a open (c)abinet" << endl;
			cout << "(j)amal looks at you intently." << endl;
			cin >> direction;
			if (direction == 's')
				room = 2;
			if (direction == 'c')
				itemDropper();
			if (direction == 'j') {
				cout << "you pet jamal hes happy:)" << endl;
				affinity += 10;
				cout << "jamals affinity is now " << affinity << endl;
			}
			break;
		case 4:
			cout << "you seem to be in a room that is suprisingly clean like a decontamination checkpoint, you see a green door to the (e)ast and (n)orth the way you came." << endl;
			cout << "there's a sho(p) built into the wall" << endl;
			cin >> direction;
			if (direction == 'n')
				room = 2;
			if (direction == 'e')
				room = 5;
			if (direction == 'p')
				Shop(); 
			PetActions();
			break;

		case 5:
			cout << "you walk through the door to the east and you seem to be in an old clinical rooms it looks like a surgery preperation room? weird. The way you came is (w)est and you see a door to the (e)ast." << endl;
			cin >> direction;
			if (direction == 'e')
				room = 6;
			if (direction == 'w')
				room = 4;
			PetActions();
			break;
		case 6:
			cout << "you go east and appear to enter a weird room with a ton of machines like x ray machine and stuff maybe this is the surgery room, you see a door covered in what seems to be a crimson liquid to the (n)orth and back the way you came (w)est." << endl;
			cin >> direction;
			if (direction == 'n')
				room = 7;
			if (direction == 'w')
				room = 5;
			PetActions();
			break;
		case 7:
			BattleSystem();
			cout << "you're in a room full of this fungus it odly kind of soothing tho like being put in a trance but you seem to be in a old classroom or more bandoned , you can go (s)outh or (e)ast." << endl;
			cin >> direction;
			if (direction == 's')
				room = 6;
			if (direction == 'e')
				room = 8;
			PetActions();
			break;
		case 8:
			cout << "you're in a old laboratory room it seems they conducted experiments here before , you can go (n)orth or (w)est." << endl;
			cin >> direction;
			if (direction == 'n')
				room = 9;
			if (direction == 'w')
				room = 7;
			break;
		case 9:
			BattleSystem();
			cout << "you're in the test subjects room there are test subjects evcerywhere some even got out , you can go (s)outh or (e)ast." << endl;
			cin >> direction;
			if (direction == 's')
				room = 8;
			if (direction == 'e')
				room = 10;
			break;
		case 10:
			cout << "you reached the exit looks like its the end of the road for us go (w)est to go back for anything you forgot. But other then that you're on you own to explore the wasteland before you." << endl;
			cout << " till strangers meet again." << endl;
			cout << "if you dont go back press q to exit." << endl;
			cin >> direction;
			if (direction == 'w')
				room = 9;
			break;




		}

	}
}



// battlesystem function how you fight the monsters
void BattleSystem() {
	int MonsterType = MonsterGen();
	int MonsterHealth = 0;
	int MonsterDmg = 0;
	int PlayerDmg = 0;

	if (MonsterType == 1) {
		MonsterHealth = 30;
	}
	if (MonsterType == 2) {
		MonsterHealth = 40;
	}
	if (MonsterType == 3) {
		MonsterHealth = 20;
	}
	if (MonsterType == 4) {
		MonsterHealth = 10;
	}
	if (MonsterType == 5) {
		MonsterHealth = 35;
	}

	if (MonsterType == 1) {
		MonsterDmg = rand() % 20+1;
	}
	if (MonsterType == 2) {
		MonsterDmg = rand() % 25+1;
	}
	if (MonsterType == 3) {
		MonsterDmg = rand() % 10+1;
	}
	if (MonsterType == 4) {
		MonsterDmg = rand() % 5+1;
	}
	if (MonsterType == 5) {
		MonsterDmg = rand() % 15+1;
	}

	while (MonsterHealth > 0 && PlayerHealth > 0) {
		if (inventory[3] == "kitana") {
			PlayerDmg = rand() % 150 + 35;
			cout << "youre enchanted blade does more damage the monster took more damage." << endl;
		}
		
		if (inventory[4] == "sword") {
			PlayerDmg = rand() % 80;
			cout << "youre sword does some extra damage." << endl;
			MonsterHealth -= PlayerDmg;
		}
		
		if (inventory[1] == "shield") {
			MonsterDmg /= 2;
			cout << "The monster attacks you for " << MonsterDmg << " HP." << endl;
			PlayerHealth -= MonsterDmg;
		}
		
		if (inventory[6] == "armor") {
			MonsterDmg /= 2;
			cout << "The monster attacks you for " << MonsterDmg << " HP." << endl;
			PlayerHealth -= MonsterDmg;
		}
		if (inventory[5] == "potion") {
			PlayerHealth += 5;
		}
		
		cout << "monster bites you for" <<MonsterDmg<<"HP" << endl;
		PlayerHealth -= MonsterDmg;
		PlayerDmg = rand() % 45;
		cout << "you attack the monster for"<<PlayerDmg<< "HP" << endl << endl;
		MonsterHealth -= PlayerDmg;
		system("pause");
		cout << "your health is now " << PlayerHealth << ", and the monsters health is " << MonsterHealth << endl;
		system("pause");

	}
	if (MonsterHealth <= 0)
		cout << "you defeated them!" << endl;
	else
		cout << "you died :(" << endl;
}

// monster generator function generates the monsters for the battlesystem
int MonsterGen() {
	int num = rand() % 100;
	if (num < 15) {
		cout << "a skeleton spawned!" << endl;
		return 1;
	}
	else if (num < 20) {
		cout << "a shadow lurker appears!!" << endl;
		return 2;
	}
	else if (num < 50) {
	cout << "a goblin pops out of nowhere and tries to take your stuff" << endl;
	return 3;
}
	else if (num < 75) {
		cout << "a spider pops out from the shadows" << endl;
		return 4;
	}
	else if (num < 100) {
		cout << "a zombie is lurking in the shadows be careful" << endl;
		return 5;
	}
	



}
// petactions function generates your pets actions whatever room you call it in
void PetActions() {
	int num = rand() % 100;
	if (num < 20)
		cout << "jamal viciously licks a rock." << endl;

	else if (num < 45)
		cout << "jamal lets out a low growl." << endl;

	else if (num < 55)
		cout << "jamal stares deep into your eyes there's a twinkle." << endl;

	else if (num < 75)
		cout << "jamal sits down." << endl;
	else
		cout << "jamal chases his own tail." << endl;

}

// itemdropper function drops items to you in the room when called in a specific room
void itemDropper() {
	int num = rand() % 100;
	if (num < 35) {
		cout << "you got a shield" << endl;
		inventory[1] = "shield";
	}
	else if (num < 60) {
		cout << "you got a lantern?" << endl;
		inventory[2] = "lantern";
	}
	else if (num < 70) {
		cout << "you got an enchanted kitana" << endl;
		cout << ".______________________________________________________|_._._._._._._._._._." << endl; 
		cout << " \\_____________________________________________________|_#_#_#_#_#_#_#_#_#_|" << endl;
		cout << "                                                       l" << endl;
		inventory[3] = "kitana";
	}
	else {
		cout << "you got 10 dabloons" << endl;
		dabloons += 10;
	}

}

//shop function allows you to buy things from a shop
void Shop() {

	PlaySound(TEXT("elevator music.wav"), NULL, SND_FILENAME | SND_ASYNC);
	int input = 2345646;
	while (input != 0) {
		cout << "welcome to the shop!" << endl;
		cout << "you have " << dabloons << " dabloons." << endl;
		cout << "items for sale:" << endl;
		cout << "1)sword: 20" << endl;
		cout << "2)potion: 10" << endl;
		cout << "3)armor: 50" << endl;
		cout << "press 0 to exit the shop" << endl;
		cin >> input;
		if (input == 1) {
			if (dabloons >= 20) {
				cout << "you bought a sword!" << endl;
				inventory[4] = "sword";
				dabloons -= 20;
			}
			else
				cout << "sorry, you don't have enough dabloons" << endl;
		}
		if (input == 2) {
			if (dabloons >= 10) {
				cout << "you bought a potion of everlasting life." << endl;
				inventory[5] = "potion";
				dabloons -= 10;
			}
			else
				cout << "you don't have enough dabloons" << endl;
		}
		if (input == 3) {
			if (dabloons >= 50) {
				cout << "you bought armor!" << endl;
				inventory[6] = "armor";
				dabloons -= 50;
			}
			else
				cout << "you don't have enough dabloons" << endl;
		}
		PlaySound(TEXT("door close.wav"), NULL, SND_FILENAME | SND_ASYNC);
	}
}
